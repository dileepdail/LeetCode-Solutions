class Solution {
    
    List<List<Integer>> result = new ArrayList();
    
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        getCombinations(candidates,target,0, new ArrayList<Integer>());
        return result;
    }
    
    void getCombinations(int[] candidates, int target, int index, List<Integer> current){
        
        if(target==0){
            result.add(new ArrayList(current));
            return;
        }
        
        for(int i=index; i<candidates.length; i++){
            
            if(target-candidates[i] < 0)
                continue;
            
            current.add(candidates[i]);
            getCombinations(candidates, target-candidates[i], i, current);
            current.remove(current.size()-1);
        }
    }
}