class Solution {
    public int minFallingPathSum(int[][] A) {
        
        int min = Integer.MAX_VALUE;
        
        int m = A.length;
        int n = A[0].length;
        
        int[][] dp = new int[m][n];
        
        //Initializing base case
        for(int i=0; i<n; i++){
            dp[0][i] = A[0][i];
        }
        
        
        for(int i=1; i<m; i++){
            for(int j=0; j<n; j++){
                if(j==0){
                    dp[i][j] = A[i][j] + Math.min(dp[i-1][j], dp[i-1][j+1]);
                }else if(j==n-1){
                    dp[i][j] = A[i][j] + Math.min(dp[i-1][j], dp[i-1][j-1]);
                }else{
                    dp[i][j] = A[i][j] + Math.min(Math.min(dp[i-1][j-1], dp[i-1][j]), dp[i-1][j+1]);
                }
            }
        }
        
        for(int i=0; i<n; i++){
            if(dp[m-1][i] < min)
                min = dp[m-1][i];
        }
        
        return min;
    }
}