/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    int sum=0;
    ArrayList<Integer> al = new ArrayList<Integer>();
    public int sumRootToLeaf(TreeNode root) {
        helper(root);
        return sum;
    }
    
    public void helper(TreeNode node){
        if(node == null)
            return;
        al.add(node.val);
        
        if(node.left == null && node.right==null){
            sum = sum+ convertIntFromBin(al);
        }
        helper(node.left);
        helper(node.right);
        al.remove(al.size()-1); 
    }
    
    public int convertIntFromBin(List<Integer> al){
        int result=0, count=0;
        for(int i=al.size()-1; i>=0; i--){
            result = result + (int)((al.get(i))*Math.pow(2,count));
            count++;
        }                   
        return result;
    }
}